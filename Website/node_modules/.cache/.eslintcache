[{"/Users/rr/Desktop/ROK-1418/K1418/Website/src/index.tsx":"1","/Users/rr/Desktop/ROK-1418/K1418/Website/src/reportWebVitals.ts":"2","/Users/rr/Desktop/ROK-1418/K1418/Website/src/App.tsx":"3","/Users/rr/Desktop/ROK-1418/K1418/Website/src/Ranking.tsx":"4","/Users/rr/Desktop/ROK-1418/K1418/Website/src/home.tsx":"5","/Users/rr/Desktop/ROK-1418/K1418/Website/src/account.tsx":"6","/Users/rr/Desktop/ROK-1418/K1418/Website/src/components/navigation-links.js":"7","/Users/rr/Desktop/ROK-1418/K1418/Website/src/NavigateClass.tsx":"8","/Users/rr/Desktop/ROK-1418/K1418/Website/src/Main.tsx":"9","/Users/rr/Desktop/ROK-1418/K1418/Website/src/LineGraph.tsx":"10","/Users/rr/Desktop/ROK-1418/K1418/Website/src/PercentageDonutChart .tsx":"11"},{"size":554,"mtime":1718784434876,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1718784434877,"results":"14","hashOfConfig":"13"},{"size":508,"mtime":1718784434872,"results":"15","hashOfConfig":"13"},{"size":14898,"mtime":1725672962277,"results":"16","hashOfConfig":"13"},{"size":455,"mtime":1718784434874,"results":"17","hashOfConfig":"13"},{"size":15874,"mtime":1718784434873,"results":"18","hashOfConfig":"13"},{"size":1068,"mtime":1718784434873,"results":"19","hashOfConfig":"13"},{"size":7328,"mtime":1718784434872,"results":"20","hashOfConfig":"13"},{"size":36342,"mtime":1725673546437,"results":"21","hashOfConfig":"13"},{"size":2384,"mtime":1718784434872,"results":"22","hashOfConfig":"13"},{"size":3528,"mtime":1718784434872,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4oj41m",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rr/Desktop/ROK-1418/K1418/Website/src/index.tsx",[],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/reportWebVitals.ts",[],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/App.tsx",[],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/Ranking.tsx",["58"],[],"import React from 'react';\nimport './navbar.css';\n// import './main2.css'\nimport './rank.css'\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { Chart, ArcElement, Tooltip, Legend } from 'chart.js';\nimport NavigationLinks from './components/navigation-links';\nChart.register(ArcElement, Tooltip, Legend);\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBYq-OcMmsJBx5CMYVASBBJNZE9bBrwqLA\",\n    authDomain: \"kingdom1418-rok.firebaseapp.com\",\n    projectId: \"kingdom1418-rok\",\n    storageBucket: \"kingdom1418-rok.appspot.com\",\n    messagingSenderId: \"52859370206\",\n    appId: \"1:52859370206:web:95983696b1f350397fa04f\",\n    measurementId: \"G-5QTEHKEFNL\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n\ntype Page = \"Home\" | \"Account\" | \"Calculator\" | \"Error\"\ntype accountPage = \"Sign\" | \"Create\" | \"Main\"\ntype passType = \"pass4\" | \"Altar\" | \"pass7\" | \"pass9\"\ninterface AppState {\n    page: Page,\n    accPage: accountPage\n    password: string\n    playerData: PlayerData\n    isMenuOpen: boolean\n    rankingType: RankingType\n    pass: passType\n    playerList: PlayerData[]\n    currentPage: number;\n    rowsPerPage: number;\n    load: boolean;\n}\n\ninterface PlayerData {\n    Id: string;\n    name: string;\n    DeathReq: number;\n    KillReq: number;\n    Pass4_Deaths: number;\n    Pass4_T4_Kills: number;\n    Pass4_T5_Kills: number;\n    Pass4_Total_kills: number;\n    Pass5_Deaths: number;\n    Pass5_T4_Kills: number;\n    Pass5_T5_Kills: number;\n    Pass5_Total_kills: number;\n    Pass7_Deaths: number;\n    Pass7_T4_Kills: number;\n    Pass7_T5_Kills: number;\n    Pass7_Total_kills: number;\n    KL_Deaths: number;\n    KL_T4_Kills: number;\n    KL_T5_Kills: number;\n    KL_Total_kills: number;\n    Power: number;\n    Total_Kills: number;\n    T4_Kills: number;\n    T5_Kills: number;\n    web_total?: number;\n}\n\nenum RankingType {\n    Kills = 'Kills',\n    Deaths = 'Deaths'\n}\n\ninterface PaginationProps {\n    currentPage: number;\n    totalPages: number;\n    onPageChange: (page: number) => void; // Specify that onPageChange is a function that takes a number and returns void\n}\n\nconst Pagination: React.FC<PaginationProps> = ({ currentPage, totalPages, onPageChange }) => (\n    <div className=\"pagination\">\n        <button onClick={() => onPageChange(Math.max(currentPage - 1, 1))} disabled={currentPage === 1}>\n            &lt; Prev\n        </button>\n        <span>Page {currentPage} of {totalPages}</span>\n        <button onClick={() => onPageChange(Math.min(currentPage + 1, totalPages))} disabled={currentPage === totalPages}>\n            Next &gt;\n        </button>\n    </div>\n);\n\nexport class Ranking extends React.Component<{}, AppState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            load: false,\n            currentPage: 1,\n            rowsPerPage: 50,\n            page: 'Home',\n            password: \"\",\n            accPage: \"Sign\",\n            rankingType: RankingType.Kills,\n            pass: \"pass4\",\n            playerList: [],\n            isMenuOpen: false, playerData: {\n                Id: '',\n                name: '',\n                DeathReq: 0,\n                KillReq: 0,\n                Pass4_Deaths: 0,\n                Pass4_T4_Kills: 0,\n                Pass4_T5_Kills: 0,\n                Pass4_Total_kills: 0,\n                Pass5_Deaths: 0,\n                Pass5_T4_Kills: 0,\n                Pass5_T5_Kills: 0,\n                Pass5_Total_kills: 0,\n                Pass7_Deaths: 0,\n                Pass7_T4_Kills: 0,\n                Pass7_T5_Kills: 0,\n                Pass7_Total_kills: 0,\n                KL_Deaths: 0,\n                KL_T4_Kills: 0,\n                KL_T5_Kills: 0,\n                KL_Total_kills: 0,\n                Power: 0,\n                Total_Kills: 0,\n                T4_Kills: 0,\n                T5_Kills: 0,\n                web_total: 0\n            }\n        };\n    }\n\n\n    fetchAllPlayerData = async () => {\n        try {\n            const db = firebase.firestore();\n            const playersCollection = db.collection('SEP_2024_KVK');\n            const querySnapshot = await playersCollection.get();\n            const playerDataArray: PlayerData[] = [];\n\n            querySnapshot.forEach((doc) => {\n                if (doc.exists) {\n                    const data = doc.data() as PlayerData;\n                    playerDataArray.push(data);\n                }\n            });\n            return playerDataArray;\n        } catch (error) {\n            return [];\n        }\n\n    };\n\n    rankPlayers = (playerDataList: PlayerData[], type: RankingType, pass: passType): PlayerData[] => {\n        return playerDataList.sort((a, b) => {\n            let valueA, valueB;\n            if (pass === 'pass4') {\n                if (type === RankingType.Kills) {\n                    valueA = (a.web_total ?? 0) // Use 0 as the default value if Pass4TotalKills is undefined\n                    valueB = (b.web_total ?? 0)\n                } else if (type === RankingType.Deaths) {\n                    valueA = a.Pass4_Deaths ?? 0; // Use 0 as the default value if Pass4Deads is undefined\n                    valueB = b.Pass4_Deaths ?? 0;\n                }\n            } else if (pass === 'Altar') {\n                if (type === RankingType.Kills) {\n                    valueA = ((a.Pass5_T4_Kills + a.Pass5_T5_Kills) ?? 0) // Use 0 as the default value if Pass4TotalKills is undefined\n                    valueB = ((b.Pass5_T4_Kills + b.Pass5_T5_Kills) ?? 0)\n                } else if (type === RankingType.Deaths) {\n                    valueA = a.Pass5_Deaths ?? 0; // Use 0 as the default value if Pass4Deads is undefined\n                    valueB = b.Pass5_Deaths ?? 0;\n                }\n            } else if (pass === 'pass7') {\n                if (type === RankingType.Kills) {\n                    valueA = ((a.Pass7_T4_Kills + a.Pass7_T5_Kills) ?? 0)// Use 0 as the default value if Pass4TotalKills is undefined\n                    valueB = ((b.Pass7_T4_Kills + b.Pass7_T5_Kills) ?? 0)\n                } else if (type === RankingType.Deaths) {\n                    valueA = a.Pass7_Deaths ?? 0; // Use 0 as the default value if Pass4Deads is undefined\n                    valueB = b.Pass7_Deaths ?? 0;\n                }\n            } else {\n                if (type === RankingType.Kills) {\n                    valueA = (a.web_total ?? 0) + ((a.Pass5_T4_Kills + a.Pass5_T5_Kills) ?? 0) + ((a.Pass7_T4_Kills + a.Pass7_T5_Kills) ?? 0) // Use 0 as the default value if Pass4TotalKills is undefined\n                    valueB = (b.web_total ?? 0) + ((b.Pass5_T4_Kills + b.Pass5_T5_Kills) ?? 0) + ((b.Pass7_T4_Kills + b.Pass7_T5_Kills) ?? 0)\n                } else if (type === RankingType.Deaths) {\n                    valueA = (a.Pass4_Deaths ?? 0) + (a.Pass5_Deaths ?? 0) + (a.Pass7_Deaths ?? 0) // Use 0 as the default value if Pass4Deads is undefined\n                    valueB = (b.Pass4_Deaths ?? 0) + (b.Pass5_Deaths ?? 0) + (b.Pass7_Deaths ?? 0);\n                }\n            }\n            if (valueB === undefined || valueA === undefined) {\n                return 0;\n            }\n            return valueB - valueA;\n        });\n    }\n\n    async componentDidMount(): Promise<void> {\n        const playerDataArray = await this.fetchAllPlayerData();\n        const rankedPlayers = this.rankPlayers(playerDataArray, this.state.rankingType, this.state.pass);\n        this.setState({ playerList: rankedPlayers, load: true });\n    }\n\n\n\n    toggleMenu = () => {\n        this.setState({ isMenuOpen: !this.state.isMenuOpen });\n    }\n\n\n    handleRankingTypeChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        this.rankPlayers(this.state.playerList, event.target.value as RankingType, this.state.pass)\n        this.setState({ rankingType: event.target.value as RankingType });\n    };\n\n    handlePassChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        this.rankPlayers(this.state.playerList, this.state.rankingType, event.target.value as passType)\n        this.setState({ pass: event.target.value as passType });\n    };\n\n\n\n\n    render = (): JSX.Element => {\n        const { playerList, currentPage, rowsPerPage, rankingType } = this.state;\n        const totalRows = playerList.length;\n        const totalPages = Math.ceil(totalRows / rowsPerPage);\n        const lastRowIndex = currentPage * rowsPerPage;\n        const currentRows = playerList.slice(\n            (currentPage - 1) * rowsPerPage,\n            currentPage * rowsPerPage\n        );\n        return (<div className=\"home-container\">\n            <header data-thq=\"thq-navbar\" className=\"home-navbar-interactive\">\n                <span className=\"home-text\">Kingdom 1418</span>\n                <div className=\"home-container1\">\n                    <div data-thq=\"thq-navbar-nav\" className=\"home-desktop-menu\">\n                        <NavigationLinks rootClassName=\"rootClassName17\"></NavigationLinks>\n                    </div>\n                </div>\n                <div data-thq=\"thq-burger-menu\" className=\"home-burger-menu\" onClick={this.toggleMenu}>\n                    <svg viewBox=\"0 0 1024 1024\" className=\"home-icon\" style={{ fill: \"white\" }}>\n                        <path d=\"M128 554.667h768c23.552 0 42.667-19.115 42.667-42.667s-19.115-42.667-42.667-42.667h-768c-23.552 0-42.667 19.115-42.667 42.667s19.115 42.667 42.667 42.667zM128 298.667h768c23.552 0 42.667-19.115 42.667-42.667s-19.115-42.667-42.667-42.667h-768c-23.552 0-42.667 19.115-42.667 42.667s19.115 42.667 42.667 42.667zM128 810.667h768c23.552 0 42.667-19.115 42.667-42.667s-19.115-42.667-42.667-42.667h-768c-23.552 0-42.667 19.115-42.667 42.667s19.115 42.667 42.667 42.667z\"></path>\n                    </svg>\n                </div>\n                <div data-thq=\"thq-mobile-menu\" className={`home-mobile-menu ${this.state.isMenuOpen ? 'open' : ''}`}>\n                    <div className=\"home-nav\">\n                        <div className=\"home-top\">\n                            <span className=\"home-text01\">Kingdom 1418</span>\n                            <div data-thq=\"thq-close-menu\" className=\"home-close-menu\" onClick={this.toggleMenu}>\n                                <svg viewBox=\"0 0 1024 1024\" className=\"home-icon02\" style={{ fill: \"white\" }}>\n                                    <path d=\"M810 274l-238 238 238 238-60 60-238-238-238 238-60-60 238-238-238-238 60-60 238 238 238-238z\"></path>\n                                </svg>\n                            </div>\n                        </div>\n                        <nav className=\"home-links\">\n                            <NavigationLinks rootClassName=\"rootClassName14\"></NavigationLinks>\n                        </nav>\n                    </div>\n                </div>\n            </header>\n            <div className=\"ranking-container\">\n                <h1 className=\"ranking-title\">Player Rankings</h1>\n                <p className=\"ranking-instructions\">Use the dropdown menus to filter rankings by Kills/Deaths and by Pass. Navigate through the table pages with the Prev and Next buttons.</p>\n                <div className=\"ranking-controls\">\n                    <select value={rankingType} onChange={this.handleRankingTypeChange} className=\"ranking-dropdown\">\n                        <option value={RankingType.Kills}>Kills</option>\n                        <option value={RankingType.Deaths}>Deaths</option>\n                    </select>\n                    <select value={this.state.pass} onChange={this.handlePassChange} className=\"ranking-dropdown\">\n                        <option value=\"pass4\">Pass 4</option>\n                        <option value=\"Altar\">Pass 7</option>\n                        <option value=\"pass7\">Pass 8</option>\n                        <option value=\"pass9\">total</option>\n                    </select>\n                </div>\n                <Pagination\n                    currentPage={currentPage}\n                    totalPages={totalPages}\n                    onPageChange={(page: number) => this.setState({ currentPage: page })}\n                />\n                <table className=\"ranking-table\">\n                    <thead>\n                        <tr>\n                            <th>Rank</th>\n                            <th>Name</th>\n                            <th>Total Kills/Deaths</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.load && currentRows.map((player, index) => (\n                            <tr key={player.Id}>\n                                <td>{(currentPage - 1) * rowsPerPage + index + 1}</td>\n                                <td>{player.name}</td>\n                                <td>\n                                    {this.state.rankingType === RankingType.Kills\n                                        ? (this.state.pass === \"pass4\"\n                                            ? (player.web_total || 0).toLocaleString()\n                                            : this.state.pass === \"Altar\"\n                                                ? (player.Pass5_T4_Kills + player.Pass5_T5_Kills).toLocaleString()\n                                                : this.state.pass === \"pass7\"\n                                                    ? (player.Pass7_T4_Kills + player.Pass7_T5_Kills).toLocaleString()\n                                                    : this.state.pass === \"pass9\"\n                                                        ? ((player.web_total || 0) + player.Pass5_T4_Kills + player.Pass5_T5_Kills + player.Pass7_T4_Kills + player.Pass7_T5_Kills).toLocaleString()\n                                                        : (player.KL_T4_Kills + player.KL_T5_Kills).toLocaleString())\n                                        : (this.state.pass === \"pass4\"\n                                            ? player.Pass4_Deaths.toLocaleString()\n                                            : this.state.pass === \"Altar\"\n                                                ? player.Pass5_Deaths.toLocaleString()\n                                                : this.state.pass === \"pass7\"\n                                                    ? player.Pass7_Deaths.toLocaleString()\n                                                    : this.state.pass === \"pass9\"\n                                                        ? (player.Pass4_Deaths + player.Pass5_Deaths + player.Pass7_Deaths).toLocaleString()\n                                                        : player.KL_Deaths.toLocaleString())\n                                    }\n                                </td>\n                            </tr>\n\n\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <footer className=\"home-footer\">\n                <span className=\"home-text15\">© 2024 All Rights Reserved.</span>\n            </footer>\n        </div>)\n\n    }\n}\n","/Users/rr/Desktop/ROK-1418/K1418/Website/src/home.tsx",[],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/account.tsx",["59"],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/components/navigation-links.js",[],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/NavigateClass.tsx",[],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/Main.tsx",[],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/LineGraph.tsx",["60","61","62"],[],"/Users/rr/Desktop/ROK-1418/K1418/Website/src/PercentageDonutChart .tsx",["63"],[],{"ruleId":"64","severity":1,"message":"65","line":230,"column":15,"nodeType":"66","messageId":"67","endLine":230,"endColumn":27},{"ruleId":"64","severity":1,"message":"68","line":180,"column":23,"nodeType":"66","messageId":"67","endLine":180,"endColumn":37},{"ruleId":"64","severity":1,"message":"69","line":9,"column":5,"nodeType":"66","messageId":"67","endLine":9,"endColumn":10},{"ruleId":"64","severity":1,"message":"70","line":10,"column":5,"nodeType":"66","messageId":"67","endLine":10,"endColumn":12},{"ruleId":"64","severity":1,"message":"71","line":11,"column":5,"nodeType":"66","messageId":"67","endLine":11,"endColumn":11},{"ruleId":"72","severity":1,"message":"73","line":85,"column":8,"nodeType":"74","endLine":85,"endColumn":20,"suggestions":"75"},"@typescript-eslint/no-unused-vars","'lastRowIndex' is assigned a value but never used.","Identifier","unusedVar","'userCredential' is assigned a value but never used.","'Title' is defined but never used.","'Tooltip' is defined but never used.","'Legend' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rotPercent'. Either include it or remove the dependency array.","ArrayExpression",["76"],{"desc":"77","fix":"78"},"Update the dependencies array to be: [percentage, rotPercent]",{"range":"79","text":"80"},[3042,3054],"[percentage, rotPercent]"]